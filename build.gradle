plugins {
//    id 'application'
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.districtbusiness'
version = '0.0.1-SNAPSHOT'

bootJar {
//    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
    enabled = true
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    configureEach {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

ext {
    set('springCloudVersion', "2024.0.1")
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

bootJar {
    mainClass = 'com.districtbusiness.authservice.AuthServiceApplication'
}

var mapStructVersion = "1.6.3"

dependencies {
    runtimeOnly 'org.apache.logging.log4j:log4j-layout-template-json'
    implementation 'com.lmax:disruptor:4.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework:spring-jdbc'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'org.postgresql:r2dbc-postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation "org.mapstruct:mapstruct:${mapStructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"

    // JWT
    implementation "io.jsonwebtoken:jjwt-api:0.11.5"
    implementation "io.jsonwebtoken:jjwt-impl:0.11.5"
    implementation "io.jsonwebtoken:jjwt-jackson:0.11.5"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
